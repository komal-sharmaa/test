{
	"name": "CastDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Employee3",
						"type": "DatasetReference"
					},
					"name": "Emp"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_outputFolder",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "ds_outputFolder",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "cast1"
				},
				{
					"name": "split1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          name as string,",
				"          gender as string,",
				"          country as string,",
				"          doj as string,",
				"          dept as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Emp",
				"Emp cast(output(",
				"          empid as integer,",
				"          doj as date 'dd/MM/yyyy',",
				"          dept as integer",
				"     ),",
				"     errors: true) ~> cast1",
				"cast1 split(!isError(),",
				"     disjoint: false) ~> split1@(goodRows, badRows)",
				"split1@goodRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['goodRows.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          name,",
				"          gender,",
				"          country,",
				"          doj,",
				"          dept",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1",
				"split1@badRows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['badRows.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> sink2"
			]
		}
	}
}
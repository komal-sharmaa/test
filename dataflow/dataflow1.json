{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_emp",
						"type": "DatasetReference"
					},
					"name": "Emp"
				},
				{
					"dataset": {
						"referenceName": "ds_employee",
						"type": "DatasetReference"
					},
					"name": "Employee"
				},
				{
					"dataset": {
						"referenceName": "Emp",
						"type": "DatasetReference"
					},
					"name": "EmpAgain"
				},
				{
					"dataset": {
						"referenceName": "Country",
						"type": "DatasetReference"
					},
					"name": "Country"
				}
			],
			"sinks": [
				{
					"name": "cachedMaxEmpId"
				},
				{
					"name": "CachedCountries"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				},
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "union1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as integer,",
				"          empname as string,",
				"          gender as string,",
				"          country as string,",
				"          salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Emp",
				"source(output(",
				"          empname as string,",
				"          gender as string,",
				"          country as string,",
				"          salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Employee",
				"source(output(",
				"          empid as integer,",
				"          empname as string,",
				"          gender as string,",
				"          country as string,",
				"          salary as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpAgain",
				"source(output(",
				"          country_code as string,",
				"          country_name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Country",
				"Emp aggregate(empid = max(empid)) ~> aggregate1",
				"Employee keyGenerate(output(empid as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(empid = empid+cachedMaxEmpId#outputs()[1].maxempid,",
				"          country = CachedCountries#lookup(country).country_name) ~> derivedColumn1",
				"EmpAgain, select1 union(byName: true)~> union1",
				"derivedColumn1 select(mapColumn(",
				"          empid,",
				"          empname,",
				"          gender,",
				"          country,",
				"          salary",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"aggregate1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          maxempid = empid",
				"     )) ~> cachedMaxEmpId",
				"Country sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     keys:['country_code'],",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          country_code,",
				"          country_name",
				"     )) ~> CachedCountries"
			]
		}
	}
}